generator client {
  provider = "prisma-client-js"
  output   = "../../dist/generated/client-online"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL_ONLINE_LAPA")
}

model Company {
  id                                      Int                                       @id @default(autoincrement())
  name                                    String
  kpiRevenues                             KpiRevenue[]
  kpiTotalRentals                         KpiTotalRentals[]
  kpiTicketAverages                       KpiTicketAverage[]
  kpiAlos                                 KpiAlos[]
  KpiOccupancyRates                       KpiOccupancyRate[]
  KpiGiros                                KpiGiro[]
  KpiRevpars                              KpiRevpar[]
  KpiTrevpars                             KpiTrevpar[]
  KpiOccupancyRatesByWeek                 KpiOccupancyRateByWeek[]
  KpiGiroByWeek                           KpiGiroByWeek[]
  KpiOccupancyRatesByPeriod               KpiOccupancyRateByPeriod[]
  KpiOccupancyRatesBySuiteCategory        KpiOccupancyRateBySuiteCategory[]
  KpiRevenuesByRentalType                 KpiRevenueByRentalType[]
  KpiRevenueByPeriod                      KpiRevenueByPeriod[]
  KpiTotalRentalsByPeriod                 KpiTotalRentalsByPeriod[]
  KpiRevparsByPeriod                      KpiRevparByPeriod[]
  KpiTicketAveragesByPeriod               KpiTicketAverageByPeriod[]
  KpiTrevparsByPeriod                     KpiTrevparByPeriod[]
  Cleanings                               Cleanings[]
  CleaningsByPeriod                       CleaningsByPeriod[]
  CleaningsByWeek                         CleaningsByWeek[]
  Inspections                             Inspections[]
  Governance                              Governance?
  CleaningsByPeriodShift                  CleaningsByPeriodShift[]
  Bookings                                Bookings[]
  BookingsTotalRentalsByRentalType        BookingsTotalRentalsByRentalType[]
  BookingsRevenueByChannelType            BookingsRevenueByChannelType[]
  BookingsTicketAverage                   BookingsTicketAverage[]
  BookingsRevenue                         BookingsRevenue[]
  BookingsRepresentativeness              BookingsRepresentativeness[]
  BookingsRepresentativenessByPeriod      BookingsRepresentativenessByPeriod[]
  BookingsTotalRentals                    BookingsTotalRentals[]
  BookingsTotalRentalsByPeriod            BookingsTotalRentalsByPeriod[]
  BookingsRevenueByPeriod                 BookingsRevenueByPeriod[]
  BookingsTotalRentalsByChannelType       BookingsTotalRentalsByChannelType[]
  BookingsTicketAverageByChannelType      BookingsTicketAverageByChannelType[]
  BookingsRevenueByPayment                BookingsRevenueByPayment[]
  BookingsRepresentativenessByChannelType BookingsRepresentativenessByChannelType[]
  BookingsTotalRentalsByPeriodEcommerce   BookingsTotalRentalsByPeriodEcommerce[]
  BookingsRevenueByPeriodEcommerce        BookingsRevenueByPeriodEcommerce[]
}

model Governance {
  id                     Int                      @id @default(autoincrement())
  cleanings              Cleanings[]
  cleaningsByPeriod      CleaningsByPeriod[]
  cleaningsByWeek        CleaningsByWeek[]
  Inspections            Inspections[]
  companyId              Int                      @unique
  company                Company?                 @relation(fields: [companyId], references: [id])
  cleaningsByPeriodShift CleaningsByPeriodShift[]
}

model KpiRevenue {
  id                    Int         @id @default(autoincrement())
  suiteCategoryId       Int
  suiteCategoryName     String
  permanenceValueTotal  Decimal     @db.Decimal(10, 2)
  permanenceValueLiquid Decimal     @db.Decimal(10, 2)
  period                PeriodEnum?
  priceSale             Decimal?    @db.Decimal(10, 2)
  discountSale          Decimal     @db.Decimal(10, 2)
  discountRental        Decimal?    @db.Decimal(10, 2)
  totalValue            Decimal     @db.Decimal(10, 2)
  totalAllValue         Decimal     @db.Decimal(10, 2)
  totalDiscount         Decimal     @db.Decimal(10, 2)
  totalSaleDirect       Decimal     @db.Decimal(10, 2)
  createdDate           DateTime
  companyId             Int
  company               Company?    @relation(fields: [companyId], references: [id])

  @@unique([suiteCategoryId, period, createdDate])
}

model KpiRevenueByRentalType {
  id          Int             @id @default(autoincrement())
  period      PeriodEnum?
  rentalType  RentalTypeEnum?
  totalValue  Decimal         @db.Decimal(10, 2)
  createdDate DateTime
  companyId   Int
  company     Company?        @relation(fields: [companyId], references: [id])

  @@unique([period, createdDate, rentalType])
}

model KpiRevenueByPeriod {
  id          Int         @id @default(autoincrement())
  period      PeriodEnum?
  totalValue  Decimal     @db.Decimal(10, 2)
  createdDate DateTime
  companyId   Int
  company     Company?    @relation(fields: [companyId], references: [id])

  @@unique([period, createdDate])
}

model KpiTotalRentals {
  id                        Int         @id @default(autoincrement())
  suiteCategoryName         String
  suiteCategoryId           Int
  period                    PeriodEnum?
  createdDate               DateTime
  totalRentalsApartments    Int?
  totalBookings             Int?
  totalAllRentalsApartments Int?
  totalAllBookings          Int?
  companyId                 Int
  company                   Company?    @relation(fields: [companyId], references: [id])

  @@unique([suiteCategoryId, period, createdDate])
}

model KpiTotalRentalsByPeriod {
  id                        Int         @id @default(autoincrement())
  period                    PeriodEnum?
  createdDate               DateTime
  totalAllRentalsApartments Int?
  companyId                 Int
  company                   Company?    @relation(fields: [companyId], references: [id])

  @@unique([period, createdDate])
}

model KpiTicketAverage {
  id                     Int         @id @default(autoincrement())
  suiteCategoryName      String
  suiteCategoryId        Int
  totalTicketAverage     Decimal     @db.Decimal(10, 2)
  ticketAverageSale      Decimal     @db.Decimal(10, 2)
  ticketAverageRental    Decimal     @db.Decimal(10, 2)
  createdDate            DateTime
  period                 PeriodEnum?
  totalAllTicketAverage  Decimal     @db.Decimal(10, 2)
  ticketAverageAllSale   Decimal     @db.Decimal(10, 2)
  ticketAverageAllRental Decimal     @db.Decimal(10, 2)
  companyId              Int
  company                Company?    @relation(fields: [companyId], references: [id])

  @@unique([suiteCategoryId, period, createdDate])
}

model KpiTicketAverageByPeriod {
  id                    Int         @id @default(autoincrement())
  createdDate           DateTime
  period                PeriodEnum?
  totalAllTicketAverage Decimal     @db.Decimal(10, 2)
  companyId             Int
  company               Company?    @relation(fields: [companyId], references: [id])

  @@unique([period, createdDate])
}

model KpiAlos {
  id                         Int         @id @default(autoincrement())
  suiteCategoryId            Int
  suiteCategoryName          String
  period                     PeriodEnum?
  occupationTime             String
  createdDate                DateTime
  averageOccupationTime      String?
  totalAverageOccupationTime String?
  companyId                  Int
  company                    Company?    @relation(fields: [companyId], references: [id])

  @@unique([suiteCategoryId, period, createdDate])
}

model KpiOccupancyRate {
  id                 Int         @id @default(autoincrement())
  suiteCategoryId    Int
  suiteCategoryName  String
  period             PeriodEnum?
  occupancyRate      Decimal     @db.Decimal(10, 2)
  totalOccupancyRate Decimal     @db.Decimal(10, 2)
  createdDate        DateTime
  companyId          Int
  company            Company?    @relation(fields: [companyId], references: [id])

  @@unique([suiteCategoryId, period, createdDate])
}

model KpiOccupancyRateByWeek {
  id                 Int         @id @default(autoincrement())
  suiteCategoryId    Int
  suiteCategoryName  String
  period             PeriodEnum?
  occupancyRate      Decimal     @db.Decimal(10, 2)
  totalOccupancyRate Decimal     @db.Decimal(10, 2)
  createdDate        DateTime
  companyId          Int
  company            Company?    @relation(fields: [companyId], references: [id])

  @@unique([suiteCategoryId, period, createdDate])
}

model KpiOccupancyRateByPeriod {
  id                 Int         @id @default(autoincrement())
  period             PeriodEnum?
  totalOccupancyRate Decimal     @db.Decimal(10, 2)
  createdDate        DateTime
  companyId          Int
  company            Company?    @relation(fields: [companyId], references: [id])

  @@unique([period, createdDate])
}

model KpiOccupancyRateBySuiteCategory {
  id                Int         @id @default(autoincrement())
  suiteCategoryId   Int
  suiteCategoryName String
  period            PeriodEnum?
  occupancyRate     Decimal     @db.Decimal(10, 2)
  createdDate       DateTime
  companyId         Int
  company           Company?    @relation(fields: [companyId], references: [id])

  @@unique([suiteCategoryId, period, createdDate])
}

model KpiGiro {
  id                Int         @id @default(autoincrement())
  suiteCategoryId   Int
  period            PeriodEnum?
  suiteCategoryName String
  giro              Decimal     @db.Decimal(10, 2)
  totalGiro         Decimal     @db.Decimal(10, 2)
  createdDate       DateTime
  companyId         Int
  company           Company?    @relation(fields: [companyId], references: [id])

  @@unique([suiteCategoryId, period, createdDate])
}

model KpiGiroByWeek {
  id                Int         @id @default(autoincrement())
  suiteCategoryId   Int
  period            PeriodEnum?
  suiteCategoryName String
  giro              Decimal     @db.Decimal(10, 2)
  totalGiro         Decimal     @db.Decimal(10, 2)
  createdDate       DateTime
  companyId         Int
  company           Company?    @relation(fields: [companyId], references: [id])

  @@unique([suiteCategoryId, period, createdDate])
}

model KpiRevpar {
  id                Int         @id @default(autoincrement())
  suiteCategoryId   Int
  period            PeriodEnum?
  suiteCategoryName String
  revpar            Decimal     @db.Decimal(10, 2)
  totalRevpar       Decimal     @db.Decimal(10, 2)
  createdDate       DateTime
  companyId         Int
  company           Company?    @relation(fields: [companyId], references: [id])

  @@unique([suiteCategoryId, period, createdDate])
}

model KpiRevparByPeriod {
  id          Int         @id @default(autoincrement())
  period      PeriodEnum?
  totalRevpar Decimal     @db.Decimal(10, 2)
  createdDate DateTime
  companyId   Int
  company     Company?    @relation(fields: [companyId], references: [id])

  @@unique([period, createdDate])
}

model KpiTrevpar {
  id                Int         @id @default(autoincrement())
  suiteCategoryId   Int
  period            PeriodEnum?
  suiteCategoryName String
  trevpar           Decimal     @db.Decimal(10, 2)
  totalTrevpar      Decimal     @db.Decimal(10, 2)
  createdDate       DateTime
  companyId         Int
  company           Company?    @relation(fields: [companyId], references: [id])

  @@unique([suiteCategoryId, period, createdDate])
}

model KpiTrevparByPeriod {
  id           Int         @id @default(autoincrement())
  period       PeriodEnum?
  totalTrevpar Decimal     @db.Decimal(10, 2)
  createdDate  DateTime
  companyId    Int
  company      Company?    @relation(fields: [companyId], references: [id])

  @@unique([period, createdDate])
}

model Cleanings {
  id                           Int         @id @default(autoincrement())
  employeeName                 String
  totalSuitesCleanings         Int
  totalAllSuitesCleanings      Int
  totalDaysWorked              Int
  shift                        String
  averageDailyCleaning         Decimal
  totalAllAverageDailyCleaning Int
  createdDate                  DateTime
  period                       PeriodEnum?
  companyId                    Int
  company                      Company?    @relation(fields: [companyId], references: [id])
  governance                   Governance? @relation(fields: [governanceId], references: [id])
  governanceId                 Int?

  @@unique([employeeName, createdDate, period])
}

model CleaningsByPeriod {
  id                   Int         @id @default(autoincrement())
  totalSuitesCleanings Int
  createdDate          DateTime
  period               PeriodEnum?
  companyId            Int
  company              Company?    @relation(fields: [companyId], references: [id])
  governance           Governance? @relation(fields: [governanceId], references: [id])
  governanceId         Int?

  @@unique([period, createdDate])
}

model CleaningsByPeriodShift {
  id                   Int         @id @default(autoincrement())
  totalSuitesCleanings Int
  employeeName         String
  shift                String
  createdDate          DateTime
  period               PeriodEnum?
  companyId            Int
  company              Company?    @relation(fields: [companyId], references: [id])
  governance           Governance? @relation(fields: [governanceId], references: [id])
  governanceId         Int?

  @@unique([period, createdDate, employeeName])
}

model CleaningsByWeek {
  id                            Int         @id @default(autoincrement())
  totalAverageDailyWeekCleaning Decimal
  totalAverageShiftCleaning     Decimal
  totalAllAverageShiftCleaning  Decimal
  averageDailyWeekCleaning      Decimal
  totalSuitesCleanings          Int
  idealShiftMaid                Int
  totalIdealShiftMaid           Int
  realShiftMaid                 Int
  totalRealShiftMaid            Int
  difference                    Int
  totalDifference               Int
  period                        PeriodEnum?
  shift                         String
  createdDate                   DateTime
  companyId                     Int
  company                       Company?    @relation(fields: [companyId], references: [id])
  governance                    Governance? @relation(fields: [governanceId], references: [id])
  governanceId                  Int?

  @@unique([period, shift, createdDate])
}

model Inspections {
  id                  Int         @id @default(autoincrement())
  employeeName        String
  totalInspections    Int
  totalAllInspections Int
  period              PeriodEnum?
  createdDate         DateTime
  companyId           Int
  company             Company?    @relation(fields: [companyId], references: [id])
  governance          Governance? @relation(fields: [governanceId], references: [id])
  governanceId        Int?

  @@unique([employeeName, period, createdDate])
}

model Bookings {
  id                                      Int                                       @id @default(autoincrement())
  companyId                               Int
  company                                 Company?                                  @relation(fields: [companyId], references: [id])
  bookingsTotalRentalsByRentalType        BookingsTotalRentalsByRentalType[]
  bookingsRevenueByChannelType            BookingsRevenueByChannelType[]
  bookingsTicketAverage                   BookingsTicketAverage[]
  bookingsRevenue                         BookingsRevenue[]
  bookingsRepresentativeness              BookingsRepresentativeness[]
  bookingsRepresentativenessByPeriod      BookingsRepresentativenessByPeriod[]
  bookingsTotalRentals                    BookingsTotalRentals[]
  bookingsTotalRentalsByPeriod            BookingsTotalRentalsByPeriod[]
  bookingsRevenueByPeriod                 BookingsRevenueByPeriod[]
  BookingsTotalRentalsByChannelType       BookingsTotalRentalsByChannelType[]
  BookingsTicketAverageByChannelType      BookingsTicketAverageByChannelType[]
  BookingsRevenueByPayment                BookingsRevenueByPayment[]
  BookingsRepresentativenessByChannelType BookingsRepresentativenessByChannelType[]
  BookingsTotalRentalsByPeriodEcommerce   BookingsTotalRentalsByPeriodEcommerce[]
  BookingsRevenueByPeriodEcommerce        BookingsRevenueByPeriodEcommerce[]
}

model BookingsRevenue {
  id            Int         @id @default(autoincrement())
  period        PeriodEnum?
  totalAllValue Decimal     @db.Decimal(10, 2)
  createdDate   DateTime
  companyId     Int
  company       Company?    @relation(fields: [companyId], references: [id])
  bookings      Bookings?   @relation(fields: [bookingsId], references: [id])
  bookingsId    Int?

  @@unique([period, createdDate])
}

model BookingsRevenueByPeriod {
  id          Int         @id @default(autoincrement())
  period      PeriodEnum?
  totalValue  Decimal     @db.Decimal(10, 2)
  createdDate DateTime
  companyId   Int
  company     Company?    @relation(fields: [companyId], references: [id])
  bookings    Bookings?   @relation(fields: [bookingsId], references: [id])
  bookingsId  Int?

  @@unique([period, createdDate])
}

model BookingsRevenueByPeriodEcommerce {
  id          Int              @id @default(autoincrement())
  period      PeriodEnum?
  channelType ChannelTypeEnum?
  totalValue  Decimal          @db.Decimal(10, 2)
  createdDate DateTime
  companyId   Int
  company     Company?         @relation(fields: [companyId], references: [id])
  bookings    Bookings?        @relation(fields: [bookingsId], references: [id])
  bookingsId  Int?

  @@unique([period, createdDate])
}

model BookingsRevenueByChannelType {
  id            Int              @id @default(autoincrement())
  period        PeriodEnum?
  channelType   ChannelTypeEnum?
  totalValue    Decimal          @db.Decimal(10, 2)
  totalAllValue Decimal          @db.Decimal(10, 2)
  createdDate   DateTime
  companyId     Int
  company       Company?         @relation(fields: [companyId], references: [id])
  bookings      Bookings?        @relation(fields: [bookingsId], references: [id])
  bookingsId    Int?

  @@unique([period, createdDate, channelType])
}

model BookingsRevenueByPayment {
  id            Int         @id @default(autoincrement())
  period        PeriodEnum?
  paymentMethod String
  totalValue    Decimal     @db.Decimal(10, 2)
  createdDate   DateTime
  companyId     Int
  company       Company?    @relation(fields: [companyId], references: [id])
  bookings      Bookings?   @relation(fields: [bookingsId], references: [id])
  bookingsId    Int?

  @@unique([period, createdDate, paymentMethod])
}

model BookingsTicketAverage {
  id                    Int         @id @default(autoincrement())
  createdDate           DateTime
  period                PeriodEnum?
  totalAllTicketAverage Decimal     @db.Decimal(10, 2)
  companyId             Int
  company               Company?    @relation(fields: [companyId], references: [id])
  bookings              Bookings?   @relation(fields: [bookingsId], references: [id])
  bookingsId            Int?

  @@unique([period, createdDate])
}

model BookingsTicketAverageByChannelType {
  id                    Int              @id @default(autoincrement())
  createdDate           DateTime
  period                PeriodEnum?
  channelType           ChannelTypeEnum?
  totalTicketAverage    Decimal          @db.Decimal(10, 2)
  totalAllTicketAverage Decimal          @db.Decimal(10, 2)
  companyId             Int
  company               Company?         @relation(fields: [companyId], references: [id])
  bookings              Bookings?        @relation(fields: [bookingsId], references: [id])
  bookingsId            Int?

  @@unique([period, createdDate, channelType])
}

model BookingsRepresentativeness {
  id                         Int         @id @default(autoincrement())
  createdDate                DateTime
  period                     PeriodEnum?
  totalAllRepresentativeness Decimal     @db.Decimal(10, 2)
  companyId                  Int
  company                    Company?    @relation(fields: [companyId], references: [id])
  bookings                   Bookings?   @relation(fields: [bookingsId], references: [id])
  bookingsId                 Int?

  @@unique([period, createdDate])
}

model BookingsRepresentativenessByPeriod {
  id                      Int         @id @default(autoincrement())
  createdDate             DateTime
  period                  PeriodEnum?
  totalRepresentativeness Decimal     @db.Decimal(10, 2)
  companyId               Int
  company                 Company?    @relation(fields: [companyId], references: [id])
  bookings                Bookings?   @relation(fields: [bookingsId], references: [id])
  bookingsId              Int?

  @@unique([period, createdDate])
}

model BookingsRepresentativenessByChannelType {
  id                         Int              @id @default(autoincrement())
  createdDate                DateTime
  period                     PeriodEnum?
  channelType                ChannelTypeEnum?
  totalRepresentativeness    Decimal          @db.Decimal(10, 2)
  totalAllRepresentativeness Decimal          @db.Decimal(10, 2)
  companyId                  Int
  company                    Company?         @relation(fields: [companyId], references: [id])
  bookings                   Bookings?        @relation(fields: [bookingsId], references: [id])
  bookingsId                 Int?

  @@unique([period, createdDate, channelType])
}

model BookingsTotalRentals {
  id               Int         @id @default(autoincrement())
  period           PeriodEnum?
  totalAllBookings Int
  createdDate      DateTime
  companyId        Int
  company          Company?    @relation(fields: [companyId], references: [id])
  bookings         Bookings?   @relation(fields: [bookingsId], references: [id])
  bookingsId       Int?

  @@unique([period, createdDate])
}

model BookingsTotalRentalsByRentalType {
  id            Int             @id @default(autoincrement())
  period        PeriodEnum?
  rentalType    RentalTypeEnum?
  totalBookings Int
  createdDate   DateTime
  companyId     Int
  company       Company?        @relation(fields: [companyId], references: [id])
  bookings      Bookings?       @relation(fields: [bookingsId], references: [id])
  bookingsId    Int?

  @@unique([period, createdDate, rentalType])
}

model BookingsTotalRentalsByPeriod {
  id            Int         @id @default(autoincrement())
  period        PeriodEnum?
  totalBookings Int
  createdDate   DateTime
  companyId     Int
  company       Company?    @relation(fields: [companyId], references: [id])
  bookings      Bookings?   @relation(fields: [bookingsId], references: [id])
  bookingsId    Int?

  @@unique([period, createdDate])
}

model BookingsTotalRentalsByPeriodEcommerce {
  id            Int              @id @default(autoincrement())
  period        PeriodEnum?
  channelType   ChannelTypeEnum?
  totalBookings Int
  createdDate   DateTime
  companyId     Int
  company       Company?         @relation(fields: [companyId], references: [id])
  bookings      Bookings?        @relation(fields: [bookingsId], references: [id])
  bookingsId    Int?

  @@unique([period, createdDate])
}

model BookingsTotalRentalsByChannelType {
  id               Int              @id @default(autoincrement())
  period           PeriodEnum?
  channelType      ChannelTypeEnum?
  totalBookings    Int
  totalAllBookings Int
  createdDate      DateTime
  companyId        Int
  company          Company?         @relation(fields: [companyId], references: [id])
  bookings         Bookings?        @relation(fields: [bookingsId], references: [id])
  bookingsId       Int?

  @@unique([period, createdDate, channelType])
}

enum ChannelTypeEnum {
  WEBSITE_SCHEDULED
  WEBSITE_IMMEDIATE
  INTERNAL
  GUIA_GO
  GUIA_SCHEDULED
  BOOKING
  EXPEDIA
}

enum PeriodEnum {
  LAST_7_D
  LAST_30_D
  LAST_6_M
  CUSTOM
}

enum RentalTypeEnum {
  THREE_HOURS
  SIX_HOURS
  TWELVE_HOURS
  DAY_USE
  DAILY
  OVERNIGHT
}
